// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace HotelFuen31.APIs.Models;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Member> Members { get; set; }

    public virtual DbSet<RestaurantCustomer> RestaurantCustomers { get; set; }

    public virtual DbSet<RestaurantPeriod> RestaurantPeriods { get; set; }

    public virtual DbSet<RestaurantReservation> RestaurantReservations { get; set; }

    public virtual DbSet<RestaurantSeat> RestaurantSeats { get; set; }

    public virtual DbSet<RestaurantStatus> RestaurantStatuses { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasIndex(e => e.IdentityNumber, "IX_Members").IsUnique();

            entity.Property(e => e.Address).HasMaxLength(1024);
            entity.Property(e => e.ConfirmCode)
                .HasMaxLength(64)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(128);
            entity.Property(e => e.IdentityNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(32);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
        });

        modelBuilder.Entity<RestaurantCustomer>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Customers");

            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<RestaurantPeriod>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Periods");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<RestaurantReservation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Reservations");

            entity.Property(e => e.CustomerId).HasColumnName("Customer_Id");
            entity.Property(e => e.PeriodId).HasColumnName("Period_id");
            entity.Property(e => e.SeatId).HasColumnName("Seat_Id");
            entity.Property(e => e.StatusId).HasColumnName("Status_Id");

            entity.HasOne(d => d.Customer).WithMany(p => p.RestaurantReservations)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Reservations_Customers");

            entity.HasOne(d => d.Period).WithMany(p => p.RestaurantReservations)
                .HasForeignKey(d => d.PeriodId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Reservations_Periods");

            entity.HasOne(d => d.Seat).WithMany(p => p.RestaurantReservations)
                .HasForeignKey(d => d.SeatId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Reservations_Seats");

            entity.HasOne(d => d.Status).WithMany(p => p.RestaurantReservations)
                .HasForeignKey(d => d.StatusId)
                .HasConstraintName("FK_RestaurantReservations_RestaurantStatuses");
        });

        modelBuilder.Entity<RestaurantSeat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Seats");

            entity.Property(e => e.Type)
                .IsRequired()
                .HasMaxLength(10)
                .HasColumnName("type");
        });

        modelBuilder.Entity<RestaurantStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Status");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}